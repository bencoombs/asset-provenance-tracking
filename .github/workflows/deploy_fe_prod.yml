name: Deploy Frontend from Release

# Triggered when a release is published
on:
  release:
    types: [published]
  # Also allow manual trigger with a specific release tag
  workflow_dispatch:
    inputs:
      RELEASE_TAG:
        description: "Release tag to deploy (e.g. v1.2.3)"
        required: true

env:
  APP_ENVIRONMENT: production
  STATIC_WEB_APP_NAME: gosqas

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Get release tag
        id: get_tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "RELEASE_TAG=${{ github.event.inputs.RELEASE_TAG }}" >> $GITHUB_ENV
          else
            echo "RELEASE_TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          fi
          
      - name: Download release asset
        run: |
          ASSET_URL=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ env.RELEASE_TAG }} | jq -r '.assets[] | select(.name | contains("gosqas-frontend")) | .browser_download_url')
          echo "Downloading from: $ASSET_URL"
          curl -L -o release.zip "$ASSET_URL"
          
      - name: Extract release asset
        run: |
          mkdir -p deploy
          unzip release.zip -d deploy
          ls -la deploy
          
      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "deploy/public"
          api_location: "deploy/server"
          app_name: ${{ env.STATIC_WEB_APP_NAME }}
          api_language: "node"
          api_version: "20"
          skip_app_build: true
          output_location: ""
          environment_name: "production"
      
      - name: Post deployment notification
        if: success()
        run: |
          echo "âœ… Frontend version ${{ env.RELEASE_TAG }} successfully deployed to production"