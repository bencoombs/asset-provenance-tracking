name: Deploy frontend to production
# Manual deployment trigger
on:
  workflow_dispatch:
    inputs:
      BUMP_VERSION:
        type: choice
        description: "Bump version, eg. 'major', 'minor', or 'patch'"
        required: true
        options:
          - 'major'
          - 'minor'
          - 'patch'
        default: 'patch'
env:
  NODE_VERSION: 18
  APP_ENVIRONMENT: production
  BACKEND_URL: https://bendevbe.azurewebsites.net/api
  FRONTEND_URL: https://gosqas.org
  BUILD_ARTIFACT_NAME: 'gosqas-fe'
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.bump_version.outputs.new_tag }}
    steps:
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Checkout
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: '0'
      - name: Bump version and push tag
        id: bump_version
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: ${{ github.event.inputs.BUMP_VERSION }}
      - name: build frontend
        working-directory: packages/frontend
        env:
          APP_VERSION: ${{ steps.bump_version.outputs.new_tag }}
        run: |
          npm ci
          npx nuxi build --preset=azure
      - name: Upload build artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: ${{ env.BUILD_ARTIFACT_NAME }}-${{ steps.bump_version.outputs.new_tag }}
          path: packages/frontend/.output/**
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v4
      id: download
      with:
        name: ${{ env.BUILD_ARTIFACT_NAME }}-${{ needs.build.outputs.new_tag }}
    - name: Deploy to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: ${{ steps.download.outputs.download-path }}
        skip_app_build: true
        output_location: ""
    - name: Post deployment notification
      if: success()
      run: |
        echo "Frontend version ${{ needs.build.outputs.new_tag }} successfully deployed to ${{ env.FRONTEND_URL }}"